{
  "rules": {
    "adminUsers": {
      ".read": "auth !== null",
      ".write": false
    },
    "boards": {
      ".read": true,
      "$boardId": {
        "threads": {
          "$threadId": {
            ".write": "auth !== null && (!data.exists() || (root.child('adminUsers/' + auth.uid).exists() && !newData.exists()))",
            ".validate": "newData.isBoolean()"
          }
        }
      },
      ".indexOn": ["active"]
    },
    "categories": {
      ".read": true,
      ".write": false,
      ".indexOn": ["active"]
    },
    "posts": {
      ".read": true,
      "$postId": {
         // must be logged on to post
        ".write": "auth !== null",
          // can either create a new post or edit an existing post
         ".validate": " (newData.hasChildren(['body', 'createdAt', 'threadId', 'user'])
        							|| (newData.hasChildren(['body', 'createdAt', 'threadId', 'user', 'edited', 'editedBy', 'editedLast'])))",
        "body": {
          //ignored
          ".write": "auth !== null && (root.child('posts/' + $postId + '/user/id').val() === auth.uid)",
          ".validate": "newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "threadId": {
          // can't post to a locked thread
          ".validate": "newData.isString() && ((root.child('threads/' + newData.val() + '/locked').val() !== true)) "
        },
        "replyTo": {
          ".validate": "newData.isString()"
        },
        "likes": {
          "$uid" : {
          	".write": "auth !== null && (auth.uid === $uid)"
          }
        },
        "edited": {
          "$uid" : {
          	".validate": "auth !== null && (auth.uid === $uid)"
          }
        },
        "user": {
          "displayName": {
            ".validate": "newData.isString()"
          },
          "id": {
            // admins can also edit
            ".validate": "newData.val() === auth.uid || root.child('adminUsers/' + auth.uid).exists()"
          },
          "image": {
            ".validate": "newData.isString()"
          }
        },
        "editedBy": {
          // Todo what is data type of uid?
          ".validate": true
        },
        "editedLast": {
          ".validate": "newData.isNumber()"
        },
        "$other": {
          ".write": "auth !== null && (root.child('posts/' + $postId + '/user/id').val() == auth.uid)",
          ".validate": false
        }
      }
    },
    "threads": {
      ".read": true,
      "$threadId": {
        ".write": "(auth !== null && auth.uid === newData.child('user/id').val() && newData.exists()) || root.child('adminUsers/' + auth.uid).exists()",
        ".validate": "newData.hasChildren(['boardId', 'createdAt', 'lastPostAt', 'posts', 'title', 'user'])",
        "boardId": {
          ".validate": "newData.isString() && !data.exists()"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && !data.exists()"
        },
        "lastPostAt": {
          ".validate": "newData.isNumber()",
          ".write": "auth !== null"
        },
        "locked": {
          ".validate": "newData.isBoolean()",
          ".write": "root.child('adminUsers/' + auth.uid).exists()"
        },
        "posts": {
          "$postId": {
            ".validate": "newData.isBoolean() && !data.exists()",
            ".write": "(auth !== null && !root.child('posts/' + $postId).exists() && newData.exists()) || (root.child('adminUsers/' + auth.uid).exists() && !newData.exists())"
          }
        },
        "title": {
          ".validate": "newData.isString() && !data.exists()"
        },
        "user": {
          "displayName": {
            ".validate": "newData.isString() && !data.exists()"
          },
          "id": {
            ".validate": "newData.val() === auth.uid && !data.exists()"
          },
          "image": {
            ".validate": "newData.isString() && !data.exists()"
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "users": {
      "$uid": {
        ".write": "(auth !== null && auth.uid === $uid) || root.child('adminUsers/' + auth.uid).exists()",
        ".read": true,
        "displayName": {
          ".validate": "newData.isString()"
        },
        "lastLoginAt": {
          ".validate": "newData.isNumber()"
        },
        "profileImageUrl": {
          ".validate": "newData.isString()"
        },
        "provider": {
          ".validate": "newData.isString()"
        },
        "registeredAt": {
          ".validate": "newData.isNumber()"
        },
        "posts": {
          "$postId": {
            ".validate": "newData.isBoolean()",
            ".write": "(auth !== null && auth.uid === $uid) || (root.child('adminUsers/' + auth.uid).exists() && !newData.exists())"
          }
        },
        "threadsStarted": {
          "$threadId": {
            ".validate": "newData.isBoolean()"
          }
        },
        "likes": {
          "$postId" : {
          	".write": "auth !== null && (auth.uid === $uid)"
          }
        }
      }
    },
    "settings": {
      ".read": true,
      ".write": false
    }
  }
}
